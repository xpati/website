{"version":3,"file":"static/js/499.1d6d887c.chunk.js","mappings":"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","sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","assets/images/Mehdibha.js","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DarkModeSwitcher = ({ onClose }) => {\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\n    const { t } = useTranslation()\n    return (\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={isDarkMode}\n                    name=\"checkedDarkMode\"\n                    color=\"primary\"\n                    onChange={() => {\n                        if (onClose) {\n                            onClose();\n                        }\n                        setIsDarkMode(!isDarkMode);\n                    }}\n                />\n            }\n            label={t('dark_mode')}\n        />\n    );\n};\n\nexport default DarkModeSwitcher;\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\n\nexport default DarkModeSwitcher","import * as React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst Logo = (props) => {\n    const theme = useTheme();\n  return (\n      <span style={{ stroke: theme.logoColor, fontStyle: \"italic\", fontSize:\"2rem\", fontFamily:\"Comic Sans MS\", textDecoration:\"underline\" }}>ST</span>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport Mehdibha from \"../../assets/images/Mehdibha\";\n\nconst Logo = ({ setHomeIsActive, ...rest }) => {\n    const classes = useStyles();\n    return (\n        <Link\n            spy\n            smooth\n            duration={500}\n            offset={-70}\n            to=\"home\"\n            onSetActive={() => setHomeIsActive(true)}\n            onSetInactive={() => setHomeIsActive(false)}\n            className={classes.root}\n        >\n            <Mehdibha {...rest} />\n        </Link>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        cursor: \"pointer\",\n    },\n}));\n\nexport default Logo;\n","import React, { useState } from \"react\";\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nconst languages = [\n    {\n        code: \"pt\",\n        name: \"PT\",\n        country_code: \"pt\",\n    },\n    {\n        code: \"en\",\n        name: \"EN\",\n        country_code: \"gb\",\n    },\n];\n\nconst LangSelector = (props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClose = (code) => {\n        i18n.changeLanguage(code);\n        setAnchorEl(null);\n        if (props.onClose) {\n            props.onClose();\n        }\n    };\n\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\n\n    return (\n        <div {...props}>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\n                {currentLanguage && (\n                    <>\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\n                        {currentLanguage.name}\n                    </>\n                )}\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\n            </Button>\n            <Menu\n                id=\"profile-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                keepMounted\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n                className={classes.profileMenu}\n                disableScrollLock\n            >\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\n                    EN\n                </MenuItem>\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\n                    <span className={`flag-icon flag-icon-pt ${classes.flagIcon}`} />\n                    PT\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    profileMenu: {\n        \"& .MuiPaper-root\": {\n            backgroundColor: theme.palette.primary.main,\n            marginTop: \"2px\",\n            boxShadow: theme.shadows[4],\n        },\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: theme.backgroundSecondary,\n        },\n    },\n    flagIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default LangSelector;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link, Events } from \"react-scroll\";\nimport LangSelector from \"./LangSelector\";\nimport LoaderContext from \"../../contexts/loaderContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst smoothScrollProps = {\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 500,\n};\n\nconst AnimatedLink = React.forwardRef((props, ref) => (\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n        <Link {...smoothScrollProps} {...props} />\n    </motion.div>\n));\n\nconst Menu = ({homeIsActive}) => {\n    const classes = useStyles();\n    const [value, setValue] = useState(false);\n    const [isScrolling, setIsScrolling] = useState(false);\n    const { isLoading } = useContext(LoaderContext);\n    const controls = useAnimation();\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        Events.scrollEvent.register(\"begin\", (to, element) => {\n            setIsScrolling(true);\n        });\n\n        Events.scrollEvent.register(\"end\", (to, element) => {\n            setIsScrolling(false);\n        });\n    });\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start((i) => ({\n                y: 0,\n                opacity: 1,\n                transition: { delay: i * 0.1 + 0.3 },\n            }));\n        } else {\n            controls.start({ opacity: 0, y: -5 });\n        }\n    }, [isLoading, controls]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const spyHandleChange = (index) => {\n        if (!isScrolling) {\n            setValue(index);\n        }\n    };\n\n    useEffect(() => {\n        if (homeIsActive){\n            setValue(false)\n        }\n    }, [homeIsActive])\n\n    return (\n        <div className={classes.wrapper}>\n            <StyledTabs\n                className={classes.tabs}\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n            >\n                <StyledTab\n                    component={AnimatedLink}\n                    custom={0}\n                    animate={controls}\n                    to=\"about\"\n                    label={t('menu_about')}\n                    onSetActive={() => spyHandleChange(0)}\n                    onSetInactive={()=>spyHandleChange(false)}\n                />\n                {/* <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={1}\n                    to=\"experience\"\n                    label={t('menu_experience')}\n                    onSetActive={() => spyHandleChange(1)}\n                /> */}\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={1}\n                    to=\"projects\"\n                    label={t('menu_projects')}\n                    onSetActive={() => spyHandleChange(1)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={2}\n                    to=\"contact\"\n                    label={t('menu_contact')}\n                    onSetActive={() => spyHandleChange(2)}\n                />\n            </StyledTabs>\n            <motion.div custom={4} animate={controls}>\n                <Button\n                    component={MuiLink}\n                    href=\"/website/resume.pdf\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    underline=\"none\"\n                >\n                    {t('menu_resume')}\n                </Button>\n            </motion.div>\n            <motion.div custom={5} animate={controls}>\n                <LangSelector style={{ marginLeft: \"32px\" }} />\n            </motion.div>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    tabs: {\n        marginRight: theme.spacing(4),\n    },\n    navMenuItem: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        transition: \".2s\",\n        minWidth: 120,\n        \"&:hover\": {\n            color: theme.palette.text.primary,\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n    indicator: {\n        \"& > span\": {\n            maxWidth: 20,\n        },\n    },\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\n\nexport default Menu;\n","import React from \"react\";\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\nimport LangSelector from \"./LangSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MobileMenu = ({ open, onClose, onOpen }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const listItemProps = {\n        button: true,\n        component: Link,\n        onClick: onClose,\n        onKeyDown: onClose,\n        spy: true,\n        smooth: true,\n        offset: 0,\n        duration: 500,\n        className: classes.listItem,\n        activeClass: classes.active,\n    };\n\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\n            <div className={classes.list} role=\"presentation\">\n                <List className={classes.fullList}>\n                    <ListItem {...listItemProps} to=\"about\">\n                        {t('menu_about')}\n                    </ListItem>\n                    {/* <ListItem {...listItemProps} to=\"experience\">\n                        {t('menu_experience')}\n                    </ListItem> */}\n                    <ListItem {...listItemProps} to=\"projects\">\n                        {t('menu_projects')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"contact\">\n                        {t('menu_contact')}\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <Button\n                            component={MuiLink}\n                            href=\"/website/resume.pdf\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            underline=\"none\"\n                            >\n                            {t('menu_resume')}\n                        </Button>\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <LangSelector onClose={onClose} />\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <DarkModeSwitcher onClose={onClose} />\n                    </ListItem>\n                    <Divider />\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        backgroundColor: theme.palette.background.default,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n        marginTop: theme.spacing(4),\n    },\n    listItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2, 0),\n        \"&:hover\": {\n            backgroundColor: \"rgb(80,80,80)\",\n        },\n    },\n    btnContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(1),\n    },\n    active: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default MobileMenu;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst HamburgerIcon = ({isOpen,...rest}) => {\n    const controls = useAnimation()\n    const classes = useStyles();\n    useEffect(() => {\n        if (isOpen) {\n            controls.start(\"animate\")\n        } else {\n            controls.start(\"initial\")\n        }\n    }, [isOpen,controls]);\n    return (\n        <motion.div className={classes.container} {...rest}>\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        overflow:'hidden',\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"flex-end\",\n        cursor:\"pointer\",\n        padding:\"2px\"\n    },\n    line: {\n        height: \"3px\",\n        backgroundColor: theme.palette.text.secondary,\n    },\n    line1: {\n        width: \"35px\",\n        marginBottom: \"7px\",\n    },\n    line2: {\n        width: \"25px\",\n        marginBottom: \"7px\",\n    },\n    line3: {\n        width: \"35px\",\n    },\n}));\n\nexport default HamburgerIcon;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        width: \"150px\",\n    },\n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\nexport default Navbar;\n"],"names":["_ref","onClose","isDarkMode","setIsDarkMode","useContext","ThemeContext","t","useTranslation","_jsx","FormControlLabel","control","Switch","checked","name","color","onChange","label","props","theme","useTheme","style","stroke","logoColor","fontStyle","fontSize","fontFamily","textDecoration","children","useStyles","makeStyles","root","cursor","setHomeIsActive","rest","classes","Link","spy","smooth","duration","offset","to","onSetActive","onSetInactive","className","Mehdibha","languages","code","country_code","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","anchorEl","setAnchorEl","useState","handleClose","i18n","changeLanguage","currentLanguage","find","elem","_jsxs","Button","variant","onClick","e","currentTarget","_Fragment","concat","KeyboardArrowDownSharp","Menu","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","AnimatedLink","React","ref","motion","div","custom","animate","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","homeIsActive","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","scrollEvent","register","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","handleChange","event","newValue","component","MuiLink","href","underline","LangSelector","marginLeft","drawer","background","default","list","width","fullList","listItem","justifyContent","padding","btnContainer","active","onOpen","listItemProps","button","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","DarkModeSwitcher","Divider","container","overflow","flexDirection","line","height","secondary","line1","marginBottom","line2","line3","isOpen","variants","initial","rotate","x","logo","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","handleNav","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","Logo","Hidden","smDown","mdUp","HamburgerIcon","MobileMenu"],"sourceRoot":""}